#!/usr/bin/env python

import glob
import re
import argparse
import sys


id_re = re.compile('stats.out.\d+.(\d+)', re.M)
read_total_re = re.compile(r'ZIPSIZE=(\d+)', re.M)
read_unzip_re = re.compile(r'TOTALSIZE=(\d+)', re.M)
events_re = re.compile(r'EVENTS=(\d+)', re.M)
real_time_re = re.compile(r'WALLTIME=(\d+\.\d+)', re.M)
cpu_time_re = re.compile(r'CPUTIME=(\d+\.\d+)', re.M)

def main():
    times = {}

    parser = argparse.ArgumentParser()
    for filename in glob.glob('stats.out.*'):
	measurements = [0] * 5
        contents = open(filename, 'r').read()
        id = int(id_re.search(filename).group(1))
	for match in read_total_re.finditer(contents):
	   measurements[0] += float(match.group(1)) 
	for match in read_unzip_re.finditer(contents):
	   measurements[1] += float(match.group(1)) 
	for match in events_re.finditer(contents):
	   measurements[2] += int(match.group(1)) 
	match = real_time_re.search(contents)
	if match:
	    measurements[3] = float(match.group(1))
	match = cpu_time_re.search(contents)
	if match:
	    measurements[4] = float(match.group(1))
        print measurements
	times[id] = measurements
    data_output = open("data_output", 'w')
    data_output.write("Id,ReadTotal,ReadUnzip,Events,RealTime,CPUTime\n")
    for k in times:
        print k
        data_output.write("%s,%s,%s,%s,%s,%s\n" % (k, 
					    	   times[k][0], 
						   times[k][1], 
						   times[k][2], 
						   times[k][3], 
						   times[k][4]))
    data_output.close()


if __name__ == "__main__":
    main()

